miniC ver06
program ::= {declaration}{statement} EOF

declaration ::= intDecl | constDecl
intDecl ::= INT declItem {COMMA declItem} SEMI
constDecl ::= CONST INT constItem {COMMA constItem} SEMI
constItem ::=  [MULT] IDENT ASSIGN [AMP] NUM
declItem ::= [MULT] IDENT [LBRA NUM RBRA]

statement ::= statementAssign
statementAssign := primary ASSIGN expression SEMI //ASSIGN->"=" SEMI->";"

expression ::= term { expressionAdd | expressionSub }
expressionAdd ::= PLUS term
expressionSub ::= MINUS term

term ::= factor{ termMult | termDiv }
termMult ::= MULT factor
termDiv ::= DIV factor

factor ::= plusFactor | minusFactor | unsignedFactor
plusFactor ::= PLUS unsignedFactor
minusFactor ::= MINUS unsignedFactor
unsignedFactor ::= factorAmp | number | LPAR expression RPAR | addrresToValue
addressToValue := primary
factorAmp := AMP (number | primary) //AMP = '&'
primary := primaryMult | variable
primaryMult := MULT variable
variable := ident [ array ]
array := LBRA expression RBRA
ident := IDENT
number ::= NUM